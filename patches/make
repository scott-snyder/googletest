Bottom: 58b90473a1f66415f497ace8439e0f176b13c9dc
Top:    663047e2324232f52f451b472c693b42223d6b9a
Author: scott snyder <sss@karma>
Date:   2019-01-08 15:09:48 -0500

Fix makefiles


---

diff --git a/googlemock/make/Makefile b/googlemock/make/Makefile
index c1cc0e9..845c8db 100644
--- a/googlemock/make/Makefile
+++ b/googlemock/make/Makefile
@@ -17,7 +17,7 @@
 # Points to the root of Google Test, relative to where this file is.
 # Remember to tweak this if you move this file, or if you want to use
 # a copy of Google Test at a different location.
-GTEST_DIR = ../gtest
+GTEST_DIR = ../../googletest
 
 # Points to the root of Google Mock, relative to where this file is.
 # Remember to tweak this if you move this file.
@@ -26,6 +26,8 @@ GMOCK_DIR = ..
 # Where to find user code.
 USER_DIR = ../test
 
+DESTDIR=
+
 # Flags passed to the preprocessor.
 # Set Google Test and Google Mock's header directories as system
 # directories, such that the compiler doesn't generate warnings in
@@ -33,7 +35,7 @@ USER_DIR = ../test
 CPPFLAGS += -isystem $(GTEST_DIR)/include -isystem $(GMOCK_DIR)/include
 
 # Flags passed to the C++ compiler.
-CXXFLAGS += -g -Wall -Wextra -pthread
+CXXFLAGS += -Wall -Wextra -pthread -fPIC -std=c++14
 
 # All tests produced by this Makefile.  Remember to add new tests you
 # created to the list.
@@ -53,10 +55,15 @@ GMOCK_HEADERS = $(GMOCK_DIR)/include/gmock/*.h \
 
 # House-keeping build targets.
 
-all : $(TESTS)
+all : $(TESTS) libgmock.so libgmock_main.so
+
+install : all
+	@if test ! -z $(DESTDIR) ; then cp -a libgmock.so $(DESTDIR) ; fi
+	@if test ! -z $(DESTDIR) ; then cp -a libgmock_main.so $(DESTDIR) ; fi
+	@if test ! -z $(DESTDIR) ; then echo "libgmock.so and libgmock_main.so copied to $(DESTDIR)" ; fi
 
 clean :
-	rm -f $(TESTS) gmock.a gmock_main.a *.o
+	rm -f $(TESTS) libgmock.so libgmock_main.so *.o
 
 # Builds gmock.a and gmock_main.a.  These libraries contain both
 # Google Mock and Google Test.  A test should link with either gmock.a
@@ -86,16 +93,16 @@ gmock_main.o : $(GMOCK_SRCS_)
 	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) -I$(GMOCK_DIR) $(CXXFLAGS) \
             -c $(GMOCK_DIR)/src/gmock_main.cc
 
-gmock.a : gmock-all.o gtest-all.o
-	$(AR) $(ARFLAGS) $@ $^
+libgmock.so : gmock-all.o gtest-all.o
+	$(CXX) -shared $(CPPFLAGS) $(CXXFLAGS) -o $@ $^
 
-gmock_main.a : gmock-all.o gtest-all.o gmock_main.o
-	$(AR) $(ARFLAGS) $@ $^
+libgmock_main.so : gmock-all.o gtest-all.o gmock_main.o
+	$(CXX) -shared $(CPPFLAGS) $(CXXFLAGS) -o $@ $^
 
 # Builds a sample test.
 
 gmock_test.o : $(USER_DIR)/gmock_test.cc $(GMOCK_HEADERS)
 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/gmock_test.cc
 
-gmock_test : gmock_test.o gmock_main.a
+gmock_test : gmock_test.o libgmock_main.so
 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@
diff --git a/googletest/make/Makefile b/googletest/make/Makefile
index 9ac7449..8063304 100644
--- a/googletest/make/Makefile
+++ b/googletest/make/Makefile
@@ -19,13 +19,15 @@ GTEST_DIR = ..
 # Where to find user code.
 USER_DIR = ../samples
 
+DESTDIR=
+
 # Flags passed to the preprocessor.
 # Set Google Test's header directory as a system directory, such that
 # the compiler doesn't generate warnings in Google Test headers.
 CPPFLAGS += -isystem $(GTEST_DIR)/include
 
 # Flags passed to the C++ compiler.
-CXXFLAGS += -g -Wall -Wextra -pthread
+CXXFLAGS += -Wall -Wextra -pthread -fPIC --std=c++14
 
 # All tests produced by this Makefile.  Remember to add new tests you
 # created to the list.
@@ -38,12 +40,17 @@ GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
 
 # House-keeping build targets.
 
-all : $(TESTS)
+all : $(TESTS) libgtest.so libgtest_main.so
+
+install : all
+	@if test ! -z $(DESTDIR) ; then cp -a libgtest.so $(DESTDIR) ; fi
+	@if test ! -z $(DESTDIR) ; then cp -a libgtest_main.so $(DESTDIR) ; fi
+	@if test ! -z $(DESTDIR) ; then echo "libgtest.so and libgtest_main.so copied to $(DESTDIR)" ; fi
 
 clean :
-	rm -f $(TESTS) gtest.a gtest_main.a *.o
+	rm -f $(TESTS) libgtest.so libgtest_main.so *.o
 
-# Builds gtest.a and gtest_main.a.
+# Builds gtest.so and gtest_main.so.
 
 # Usually you shouldn't tweak such internal variables, indicated by a
 # trailing _.
@@ -61,14 +68,14 @@ gtest_main.o : $(GTEST_SRCS_)
 	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
             $(GTEST_DIR)/src/gtest_main.cc
 
-gtest.a : gtest-all.o
-	$(AR) $(ARFLAGS) $@ $^
+libgtest.so : gtest-all.o
+	$(CXX) -shared $(CPPFLAGS) $(CXXFLAGS) -o $@ $^
 
-gtest_main.a : gtest-all.o gtest_main.o
-	$(AR) $(ARFLAGS) $@ $^
+libgtest_main.so : gtest-all.o gtest_main.o
+	$(CXX) -shared $(CPPFLAGS) $(CXXFLAGS) -o $@ $^
 
-# Builds a sample test.  A test should link with either gtest.a or
-# gtest_main.a, depending on whether it defines its own main()
+# Builds a sample test.  A test should link with either gtest.so or
+# gtest_main.so, depending on whether it defines its own main()
 # function.
 
 sample1.o : $(USER_DIR)/sample1.cc $(USER_DIR)/sample1.h $(GTEST_HEADERS)
@@ -78,5 +85,5 @@ sample1_unittest.o : $(USER_DIR)/sample1_unittest.cc \
                      $(USER_DIR)/sample1.h $(GTEST_HEADERS)
 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/sample1_unittest.cc
 
-sample1_unittest : sample1.o sample1_unittest.o gtest_main.a
+sample1_unittest : sample1.o sample1_unittest.o libgtest_main.so
 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@
